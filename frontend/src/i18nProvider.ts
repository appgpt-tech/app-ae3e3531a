//Source code generated by AppGPT (www.appgpt.tech)
import { mergeTranslations } from 'ra-core';
import polyglotI18nProvider from 'ra-i18n-polyglot';
import enOriginal from 'ra-language-english';
import frOriginal from 'ra-language-french';

const enResources = {
  resources: {
    levels: {
      name: 'Levels',
      fields: {
        levelNumber: 'Level Number',
        difficulty: 'Difficulty',
        targetScore: 'Target Score',
        id: 'id',
      },
    },
    fruits: {
      name: 'Fruits',
      fields: {
        name: 'Name',
        color: 'Color',
        points: 'Points',
        specialEffect: 'Special Effect',
        id: 'id',
      },
    },
    players: {
      name: 'Players',
      fields: {
        playerName: 'Player Name',
        currentLevel: 'Current Level',
        highScore: 'High Score',
        selectedCharacter: 'Selected Character',
        id: 'id',
      },
    },
    scores: {
      name: 'Scores',
      fields: {
        playerID: 'Player Id',
        scoreValue: 'Score Value',
        level: 'Level',
        id: 'id',
      },
    },
  },
};
const frResources = {
  resources: {
    levels: {
      name: 'Levels (fr)',
      fields: {
        levelNumber: 'Level Number (fr)',
        difficulty: 'Difficulty (fr)',
        targetScore: 'Target Score (fr)',
        id: 'id',
      },
    },
    fruits: {
      name: 'Fruits (fr)',
      fields: {
        name: 'Name (fr)',
        color: 'Color (fr)',
        points: 'Points (fr)',
        specialEffect: 'Special Effect (fr)',
        id: 'id',
      },
    },
    players: {
      name: 'Players (fr)',
      fields: {
        playerName: 'Player Name (fr)',
        currentLevel: 'Current Level (fr)',
        highScore: 'High Score (fr)',
        selectedCharacter: 'Selected Character (fr)',
        id: 'id',
      },
    },
    scores: {
      name: 'Scores (fr)',
      fields: {
        playerID: 'Player Id (fr)',
        scoreValue: 'Score Value (fr)',
        level: 'Level (fr)',
        id: 'id',
      },
    },
  },
};

const en = mergeTranslations(enOriginal, enResources);
const fr = mergeTranslations(frOriginal, frResources);

const translations = { en, fr };
export const i18nProvider = polyglotI18nProvider(
  (locale) => translations[locale],
  'en', //default locale
  [
    { locale: 'en', name: 'English' },
    { locale: 'fr', name: 'Fran√ßais' },
  ],
);
